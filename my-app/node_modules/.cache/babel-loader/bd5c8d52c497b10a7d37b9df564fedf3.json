{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-lessons\\\\natan-react\\\\29-11\\\\my-app\\\\src\\\\Componnet\\\\Jsonplaceholderscrud\\\\Jsonplaceholderscrud.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Jsonplaceholderscrud extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json()).then(posts => {\n      this.setState({\n        posts\n      });\n    });\n  }\n\n  render() {\n    const {\n      posts\n    } = this.state;\n    const personsElement = posts.map(person => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\" \", posts.first, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\" \", posts.last, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const newPersons = posts.filter(item => item.id !== person.id);\n            this.setState({\n              posts: newPersons\n            });\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.setState({\n              personToEdit: posts\n            });\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 8\n      }, this)]\n    }, posts.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Jsonplaceholderscrud\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"first name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: evt => {\n            this.setState({\n              inputFirst: evt.target.value\n            });\n          },\n          defaultValue: personToEdit.first\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), \"last name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: evt => {\n            this.setState({\n              inputLast: evt.target.value\n            });\n          },\n          defaultValue: personToEdit.last\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            //   console.log(`personToEdit.id : ${personToEdit.id}`);\n            //   let newPersons = [...persons];\n            // we dont \n            let person = persons.find(it => it.id === personToEdit.id);\n            person.last = inputLast;\n            person.first = inputFirst;\n            this.setState({\n              persons\n            });\n          },\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"userId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), personsElement]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Jsonplaceholderscrud;","map":{"version":3,"sources":["C:/react-lessons/natan-react/29-11/my-app/src/Componnet/Jsonplaceholderscrud/Jsonplaceholderscrud.js"],"names":["React","Component","Jsonplaceholderscrud","state","posts","componentDidMount","fetch","then","response","json","setState","render","personsElement","map","person","first","last","newPersons","filter","item","id","personToEdit","evt","inputFirst","target","value","inputLast","persons","find","it"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Jsonplaceholderscrud extends Component {\r\n  state = {\r\n posts: []\r\n  }\r\n  postTo;\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n    .then(response => response.json()) \r\n    .then(posts => {\r\n          this.setState({ posts })\r\n    })\r\n  }\r\n \r\n  render() {\r\n    \r\n    const { posts} = this.state;\r\n    const personsElement = posts.map((person) => (\r\n      <tr key={posts.id}>\r\n          \r\n         <td> {posts.first} </td>\r\n          <td> {posts.last} </td>\r\n      \r\n       \r\n        <td><button\r\n          onClick={() => {\r\n            const newPersons = posts.filter((item) => item.id !== person.id);\r\n            this.setState({ posts: newPersons });\r\n          }}\r\n        >\r\n          Delete\r\n        </button></td>\r\n       <td> <button\r\n          onClick={() => {\r\n            this.setState({ personToEdit: posts });\r\n          }}\r\n        >\r\n          Edit\r\n        </button>\r\n      </td>\r\n      </tr>\r\n    ));\r\n    return (\r\n      <div className=\"Jsonplaceholderscrud\">\r\n        <div>\r\n          first name\r\n          <input\r\n            onChange={(evt) => {\r\n              this.setState({ inputFirst: evt.target.value });\r\n            }}\r\n            defaultValue={personToEdit.first}\r\n          />\r\n          <br />\r\n          last name\r\n          <input\r\n            onChange={(evt) => {\r\n              this.setState({ inputLast: evt.target.value });\r\n            }}\r\n            defaultValue={personToEdit.last}\r\n          />\r\n          <br />\r\n          <button\r\n            onClick={() => {\r\n            //   console.log(`personToEdit.id : ${personToEdit.id}`);\r\n            //   let newPersons = [...persons];\r\n            // we dont \r\n\r\n           \r\n              let person = persons.find((it) => it.id === personToEdit.id);\r\n              person.last = inputLast;\r\n              person.first = inputFirst;\r\n              this.setState({ persons });\r\n            }}\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n        <table>\r\n            <tr>\r\n            <th>\r\n            userId\r\n            </th>\r\n            <th>\r\n            id\r\n            </th>\r\n            <th>\r\n            title\r\n            </th>\r\n            <th>\r\n             body\r\n            </th>\r\n             </tr>\r\n        {personsElement}\r\n       </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Jsonplaceholderscrud;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}