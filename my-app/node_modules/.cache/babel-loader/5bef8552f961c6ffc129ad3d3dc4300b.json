{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-lessons\\\\natan-react\\\\29-11\\\\my-app\\\\src\\\\Componnet\\\\Jsonplaceholderscrud\\\\Jsonplaceholderscrud.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Jsonplaceholderscrud extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      persons: [{\n        id: 1,\n        first: \"avi\",\n        last: \"cohen\"\n      }, {\n        id: 2,\n        first: \"mickey\",\n        last: \"berkovich\"\n      }, {\n        id: 3,\n        first: \"jim\",\n        last: \"ber\"\n      }],\n      personToEdit: {\n        first: \"\",\n        last: \"\"\n      },\n      inputFirst: \"\",\n      inputLast: \"\"\n    };\n  }\n\n  render() {\n    const {\n      persons,\n      personToEdit,\n      inputFirst,\n      inputLast\n    } = this.state;\n    const personsElement = persons.map(person => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [\"first : \", person.first, \" ,last : \", person.last]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const newPersons = persons.filter(item => item.id !== person.id);\n          this.setState({\n            persons: newPersons\n          });\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.setState({\n            personToEdit: person\n          });\n        },\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, person.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Jsonplaceholderscrud\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"first name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: evt => {\n            this.setState({\n              inputFirst: evt.target.value\n            });\n          },\n          defaultValue: personToEdit.first\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), \"last name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: evt => {\n            this.setState({\n              inputLast: evt.target.value\n            });\n          },\n          defaultValue: personToEdit.last\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            //   console.log(`personToEdit.id : ${personToEdit.id}`);\n            //   let newPersons = [...persons];\n            // we dont \n            let person = persons.find(it => it.id === personToEdit.id);\n            person.last = inputLast;\n            person.first = inputFirst;\n            this.setState({\n              persons\n            });\n          },\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), personsElement]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Jsonplaceholderscrud;","map":{"version":3,"sources":["C:/react-lessons/natan-react/29-11/my-app/src/Componnet/Jsonplaceholderscrud/Jsonplaceholderscrud.js"],"names":["React","Component","Jsonplaceholderscrud","state","persons","id","first","last","personToEdit","inputFirst","inputLast","render","personsElement","map","person","newPersons","filter","item","setState","evt","target","value","find","it"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Jsonplaceholderscrud extends Component {\r\n  state = {\r\n    persons: [\r\n      { id: 1, first: \"avi\",last : \"cohen\" },\r\n      { id: 2, first: \"mickey\", last: \"berkovich\" },\r\n      { id: 3, first: \"jim\", last: \"ber\" },\r\n    ],\r\n    personToEdit: { first: \"\", last: \"\" },\r\n    inputFirst: \"\",\r\n    inputLast: \"\",\r\n  };\r\n  render() {\r\n    const { persons, personToEdit, inputFirst, inputLast } = this.state;\r\n    const personsElement = persons.map((person) => (\r\n      <div key={person.id}>\r\n        <table>\r\n            <thead>\r\n        <th>\r\n\r\n       <tr>\r\n         first : {person.first} ,last : {person.last}\r\n       </tr>\r\n        </th>\r\n          </thead>\r\n        </table>\r\n       \r\n        <button\r\n          onClick={() => {\r\n            const newPersons = persons.filter((item) => item.id !== person.id);\r\n            this.setState({ persons: newPersons });\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ personToEdit: person });\r\n          }}\r\n        >\r\n          Edit\r\n        </button>\r\n      </div>\r\n    ));\r\n    return (\r\n      <div className=\"Jsonplaceholderscrud\">\r\n        <div>\r\n          first name\r\n          <input\r\n            onChange={(evt) => {\r\n              this.setState({ inputFirst: evt.target.value });\r\n            }}\r\n            defaultValue={personToEdit.first}\r\n          />\r\n          <br />\r\n          last name\r\n          <input\r\n            onChange={(evt) => {\r\n              this.setState({ inputLast: evt.target.value });\r\n            }}\r\n            defaultValue={personToEdit.last}\r\n          />\r\n          <br />\r\n          <button\r\n            onClick={() => {\r\n            //   console.log(`personToEdit.id : ${personToEdit.id}`);\r\n            //   let newPersons = [...persons];\r\n            // we dont \r\n\r\n           \r\n              let person = persons.find((it) => it.id === personToEdit.id);\r\n              person.last = inputLast;\r\n              person.first = inputFirst;\r\n              this.setState({ persons });\r\n            }}\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n        {personsElement}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Jsonplaceholderscrud;"]},"metadata":{},"sourceType":"module"}